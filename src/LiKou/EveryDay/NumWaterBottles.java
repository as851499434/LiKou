package LiKou.EveryDay;

import java.util.Arrays;
import java.util.HashSet;

/**
 * @Author: liangfan
 * @Date: 2021-12-17 10:37
 * @Description:
 * 小区便利店正在促销，用 numExchange 个空酒瓶可以兑换一瓶新酒。你购入了 numBottles 瓶酒。
 * 如果喝掉了酒瓶中的酒，那么酒瓶就会变成空的。
 * 请你计算 最多 能喝到多少瓶酒
 *
 * 输入：numBottles = 9, numExchange = 3
 * 输出：13
 * 解释：你可以用 3 个空酒瓶兑换 1 瓶酒。
 * 所以最多能喝到 9 + 3 + 1 = 13 瓶酒。
 *
 */

public class NumWaterBottles {
    public static void main(String[] args) {
        NumWaterBottles numWaterBottles = new NumWaterBottles();
        System.out.println(numWaterBottles.numWaterBottles(17,18));
    }
    public int numWaterBottles(int numBottles, int numExchange) {
        //已喝瓶数
        int sum = numBottles + numBottles / numExchange;
        //换的瓶数 和 剩的空瓶数
        int rsum = numBottles / numExchange + numBottles % numExchange;
        while ( rsum/numExchange != 0) {
            sum += rsum/numExchange;
            //减去换的瓶数 加上新喝的瓶数
            rsum = rsum - rsum/numExchange * numExchange + rsum/numExchange;
        }
        return sum;
    }

    //小学数学奥数
    public int numWaterBottles2(int n, int m) {
        int cnt = n / (m  - 1);
        return n % (m - 1) == 0 ? n + cnt - 1 : n + cnt;
    }



}
